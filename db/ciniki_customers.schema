#
# Description
# -----------
# The customers table stores information for each
# customer of a business.
#
# Information in this table should be the same
# as what is stored in users.users table when
# a customer has a login to the system.
#
# If the customer does not have a login to the system,
# then they will only exist in this table.  If they want
# to login online, then they must have an entry in users module.
#
# Fields
# ------
# id: 				The id for each customer.
# uuid:				Universal Unique ID
#
# business_id:		The business the customer is attached to.
#
# cid:				The ID for the customer, specified by the business.  This is a field
#					used for outside reference, no internal linking should be done with
#					this field.
#
# status:			0 - unknown
#					1 - active
#					60 - deleted
#
# type:				The type of customer, person or business.
#
#					1 - person
#					2 - business
#
# member_status:	The membership status for the customer/member.  This is only used if the
#					members are enabled for the business/club.
#					
#					0 - Not a member
#					10 - Active Member
#					60 - Suspended Member
#
# member_lastpaid:	The UTC date and time of the last membership payment.  This is used to know
#					who is behind or not.
#
# membership_length:	The length of membership, which is used to know who is paid up and who is not.
#
#					0 - unknown
#					10 - monthly **future**  
#					20 - yearly
#					60 - lifetime (no expiry)
#
# membership_type:	The type of membership, if a member, otherwise it will be zero.
#					
#					10 - Regular
#					20 - Complementary
#					30 - Reciprocal
#
# prefix:			Dr. Mr. Ms. Miss. Mrs.
# first:			The first name(s) of the customer.
# middle:			The middle name(s) of the customer.
# last:				The last name(s) of the customer.
# suffix:			Any letters after the end of their name, Ph.D, etc.
# display_name:		The name to be displayed in lists, invoices, etc.  This can be any combination of
#					prefix, first, middle, last, suffix, company.  The format settings are in
#					ciniki_customer_settings.schema.
#
# company:			The company the customer is associated with.
# department:		The department within the company.
# title:			The title in that department.
#
# phone_home:		The home phone number for the customer.
# phone_work:		The work phone number for the customer.
# phone_cell:		The cell phone number for the customer.
# phone_fax:		The fax number for the customer.
#
# notes:			The current notes for the customer.  Any updates to notes are tracked through change_log.
#
# birthdate:		The birthdate of the customer.
#
# webflags:			The flags to determine how the customer is shown within the website.
#					0x01 - Member Visible (hidden by default without this set)
#
# permalink:		The permalink for the customer/member to be displayed on the website.
# primary_image_id:	The ID of the main image to show for the member.
# short_bio:		The short bio to show on the website.
# full_bio:			The full bio to show member page on the website.
#
# date_added:		The UTC date and time the record was added.
# last_updated:		The UTC date and time the record was udpated.
# 
create table ciniki_customers (
	id int not null auto_increment,
	uuid char(36) not null,
	business_id int not null,
	cid varchar(50) not null,
	status tinyint unsigned not null,
	type tinyint unsigned not null,
	member_status tinyint unsigned not null,
	member_lastpaid datetime not null,
	membership_length tinyint unsigned not null,
	membership_type tinyint unsigned not null,
	prefix varchar(10) not null,
	first varchar(100) not null,
	middle varchar(100) not null,
	last varchar(100) not null,
	suffix varchar(100) not null,
	display_name varchar(250) not null,
	company varchar(100) not null,
	department varchar(100) not null,
	title varchar(100) not null,
	phone_home varchar(50) not null,
	phone_work varchar(50) not null,
	phone_cell varchar(50) not null,
	phone_fax varchar(50) not null,
	notes varchar(6000) not null,
	birthdate date not null,
	webflags tinyint unsigned not null,
	permalink varchar(250) not null,
	primary_image_id int not null,
	short_bio varchar(1000) not null,
	full_bio varchar(20000) not null,
	date_added datetime not null,
	last_updated datetime not null,
	primary key (id),
	unique index (uuid, business_id),
	index (first, middle, last),
	index (company),
	index (cid),
	index sync (business_id, uuid, last_updated)
) ENGINE='InnoDB', COMMENT='v1.13';
